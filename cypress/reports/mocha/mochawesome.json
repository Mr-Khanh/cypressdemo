{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2021-08-11T03:48:34.632Z",
    "end": "2021-08-11T03:49:58.876Z",
    "duration": 84244,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "59908c69-a4b3-41f6-9ca7-2b8bd240bd3a",
      "title": "",
      "fullFile": "cypress/integration/my-first-test-01.js",
      "file": "cypress/integration/my-first-test-01.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2e1dc6aa-4d73-4ea3-8995-198c17b301c1",
          "title": "My-first-test-01",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test textbox element ",
              "fullTitle": "My-first-test-01 Test textbox element ",
              "timedOut": null,
              "duration": 22804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// User action on GUI\n_textbox.default.typeFullName('testFullname');\n_textbox.default.typeEmail('test@gmail.com');\n_textbox.default.typeCurrentAddress('testCurrentAddress');\n_textbox.default.typePermanentAddress('testPermanentAddress');\n_textbox.default.clickSubmit(); // Verification on GUI\n\ncy.get('div[id=\"output\"]').find('p').should($p => {\n  expect($p).to.have.length(4);\n  expect($p.first()).to.contain('testFullname');\n  expect($p.get(1)).to.contain(\"test@gmail.com\");\n  expect($p.get(2)).to.contain(\"testCurrentAddress\");\n  expect($p.get(3)).to.contain(\"testPermanentAddress\");\n});",
              "err": {},
              "uuid": "f4879713-3890-4c3d-97ff-9455af97c0a1",
              "parentUUID": "2e1dc6aa-4d73-4ea3-8995-198c17b301c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Trying with soft assertion",
              "fullTitle": "My-first-test-01 Trying with soft assertion",
              "timedOut": null,
              "duration": 15583,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"D:\\\\cypressdemo\\\\cypress\\\\screenshots/my-first-test-01.js/My-first-test-01 -- Trying with soft assertion (failed).png\"",
              "code": "// User action on GUI\n_textbox.default.typeFullName('testFullname');\n_textbox.default.typeEmail('test@gmail.com');\n_textbox.default.typeCurrentAddress('testCurrentAddress');\n_textbox.default.typePermanentAddress('testPermanentAddress');\n_textbox.default.clickSubmit(); // Verification on GUI\n\ncy.get('p[id=\"name\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Name:testFullname1', \"\");\n});\ncy.get('p[id=\"email\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Email:test@gmail.com', \"\");\n});\ncy.get('p[id=\"currentAddress\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Current Address :testCurrentAddress ', \"\");\n});\ncy.get('p[id=\"permanentAddress\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Permananet Address :testPermanentAddress', \"\");\n});\ncy.softAssertAll();",
              "err": {
                "message": "AssertionError: \n\nSoft assertion  1:\n\n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)",
                "estack": "AssertionError: \n\nSoft assertion  1:\n\n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\integration\\my-first-test-01.js:166:8)",
                "diff": "- { 'Soft assertion 1': 'Name:testFullname' }\n+ { 'Soft assertion 1': 'Name:testFullname1' }\n"
              },
              "uuid": "bcfe52c5-f445-4118-81a3-e4e901a74879",
              "parentUUID": "2e1dc6aa-4d73-4ea3-8995-198c17b301c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Trying with xpath",
              "fullTitle": "My-first-test-01 Trying with xpath",
              "timedOut": null,
              "duration": 10878,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"D:\\\\cypressdemo\\\\cypress\\\\screenshots/my-first-test-01.js/My-first-test-01 -- Trying with xpath (failed).png\"",
              "code": "// User action on GUI\ncy.xpath(\"//input[@id='userName']\").type(\"testFullname\");\ncy.xpath(\"//input[@id='userEmail']\").type(\"test@gmail.com\");\ncy.xpath(\"//textarea[@id='currentAddress']\").type(\"currentAddress\");\ncy.xpath(\"//textarea[@id='permanentAddress']\").type(\"testPermanentAddress\");\ncy.xpath(\"//button[@id='submit']\").click(); // Verification on GUI\ncy.xpath('//p[@id=\"name\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Name:testFullname1', \"\");\n});\ncy.xpath('//p[@id=\"email\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Email:test@gmail.com', \"\");\n});\ncy.xpath('//p[@id=\"currentAddress\"]', {\n  timeout: 10000\n}).then($p => {\n  debugger;\n  const text = $p.text();\n  cy.softAssert(text, 'Current Address :currentAddress', \"\");\n});\ncy.xpath('//p[@id=\"permanentAddress\"]', {\n  timeout: 10000\n}).then($p => {\n  const text = $p.text();\n  cy.softAssert(text, 'Permananet Address :testPermanentAddress', \"\");\n});\ncy.softAssertAll();",
              "err": {
                "message": "AssertionError: \n\nSoft assertion  1:\n\n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)\n\nSoft assertion  3:\n\n\t1 : key -> $ \t\t message: expected 'Current Address :currentAddress ' to deeply equal 'Current Address :currentAddress'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Current Address :currentAddress ' to deeply equal 'Current Address :currentAddress'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)",
                "estack": "AssertionError: \n\nSoft assertion  1:\n\n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Name:testFullname' to deeply equal 'Name:testFullname1'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)\n\nSoft assertion  3:\n\n\t1 : key -> $ \t\t message: expected 'Current Address :currentAddress ' to deeply equal 'Current Address :currentAddress'\nStack: AssertionError: \n\t1 : key -> $ \t\t message: expected 'Current Address :currentAddress ' to deeply equal 'Current Address :currentAddress'\n\n    ,_chaiDeepEqual (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31856:20)\n    ,_assertString (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31609:19)\n    ,_assert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31678:23)\n    ,_prepareAndAssert (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31920:12)\n     (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:31290:12)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\support\\index.js:164:17)\n    at Context.eval (https://demoqa.com/__cypress/tests?p=cypress\\integration\\my-first-test-01.js:201:8)",
                "diff": "- { 'Soft assertion 1': 'Name:testFullname',\n-   'Soft assertion 3': 'Current Address :currentAddress ' }\n+ { 'Soft assertion 1': 'Name:testFullname1',\n+   'Soft assertion 3': 'Current Address :currentAddress' }\n"
              },
              "uuid": "60f267d5-a81a-4d2f-aa60-9e0a1bae8075",
              "parentUUID": "2e1dc6aa-4d73-4ea3-8995-198c17b301c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Trying with cy.task",
              "fullTitle": "My-first-test-01 Trying with cy.task",
              "timedOut": null,
              "duration": 34778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('log', 'This will be output to the terminal');",
              "err": {},
              "uuid": "6890ff73-d9ec-4584-a7d0-7b7d9e6bfe94",
              "parentUUID": "2e1dc6aa-4d73-4ea3-8995-198c17b301c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4879713-3890-4c3d-97ff-9455af97c0a1",
            "6890ff73-d9ec-4584-a7d0-7b7d9e6bfe94"
          ],
          "failures": [
            "bcfe52c5-f445-4118-81a3-e4e901a74879",
            "60f267d5-a81a-4d2f-aa60-9e0a1bae8075"
          ],
          "pending": [],
          "skipped": [],
          "duration": 84043,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}